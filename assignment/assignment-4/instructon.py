# 1. 인증 초기 화면
# 회원가입, 로그인 중 하나를 입력받는 UI를 보여주세요


# 2. 회원가입
# 이메일, 비밀번호, 별명, 돈, 유저 타입(구매자, 판매자)를 입력받는 UI를 보여주세요
# 회원 가입에 문제가 없는 경우 users.csv 파일에 데이터를 저장하세요


# 3. 로그인
# 이메일, 비밀번호를 입력받는 UI를 보여주세요
# 로그인에 문제가 없는 경우 차례대로 다음과 같은 방식으로 데이터를 변환하세요
# ----------------------------------------------------------------------------------------------------
# 첫째, Infrastructure => Repository 데이터 변환 과정
# user.csv 파일을 읽고 => 문자열로 이루어진 배열 user_row를 얻습니다
# ----------------------------------------------------------------------------------------------------
# 둘째, Repository => Service 데이터 변환 과정
# user_row 배열을 user 도메인 객체로 변환합니다
# 이 때 변환하는 이유는 서비스에서 user_row보다 user 도메인 객체를 사용해야 데이터를 안전하게 잘 변경할 수 있기 때문입니다
# ----------------------------------------------------------------------------------------------------
# 셋째, Service => UI 데이터 변환 과정
# user 도메인 객체에서 필요한 데이터만 추출해서 user 딕셔너리로 변환합니다
# 이 떄 변환하는 이유는 UI에서 도메인 객체의 도메인 메소드가 필요없고, 오직 화면을 표현하는데 필요한 데이터만 있으면 충분하기 때문입니다
# ----------------------------------------------------------------------------------------------------
# 최종적으로 UI에서 user 딕셔너리가 존재한다면 유저의 이름으로 환영한다는 메세지를 출력하고 메인 화면을 보여주세요
# 존재하지 않는다면 이메일 혹은 비밀번호가 일치하지 않는다는 메세지를 출력하고 다시 인증 초기 화면을 보여주세요


# 4. 로그아웃
# 메인 화면의 어떤 입력창에서도 exit를 입력하면 로그아웃이 됩니다
# 인증 초기 화면으로 돌아가세요


# 5. 구매자의 홈 화면
# 구매자의 이메일과 구매했던 상품 목록 아이디와 이름 리스트, 계좌의 잔액을 표시하세요
# 판매되고 있는 모든 상품 목록 아이디와 이름 리스트를 표시하세요
# 구매하고자 하는 상품 아이디를 입력받는 UI를 보여주세요
# 상품 아이디를 입력하면 상품을 구매합니다


# 6. 판매자의 홈 화면
# 판매자의 이메일과 판매중인 상품 목록 아이디와 이름 리스트, 계좌의 잔액을 표시하세요
# 판매하고 있는 모든 상품 목록 아이디와 이름 리스트를 표시하세요
# 추가하고자 하는 상품 이름, 가격, 설명을 입력받는 UI를 보여주세요
# 모두 입력하면 상품이 추가됩니다


# 7. 구매 절차에서 데이터 변경
# 구매가 가능한 경우 다음과 같은 방식으로 데이터를 변경하세요
# ----------------------------------------------------------------------------------------------------
# 첫째, UI => Service 데이터 변환 과정
# buyer 딕셔너리의 email과 product_id 데이터를 사용해서 서비스에 상품 구매 요청을 하세요
# ----------------------------------------------------------------------------------------------------
# 둘째, Service => Domain 데이터 변환 과정
# buyer email을 사용해서 Repository를 통해 buyer 도메인 객체를 얻으세요
# product_id를 사용해서 Repository를 통해 product 도메인 객체를 얻으세요
# buyer가 구매자 타입의 유저인지 확인하세요
# buyer의 money가 product를 구매하기에 충분한지 확인하세요
# 구매에 문제가 없는 경우 product 도메인 객체 내부의 is_selling 정보를 변경하세요
# ----------------------------------------------------------------------------------------------------
# 셋째, Domain => Repository => Infrastructure 데이터 변환 과정
# 도메인 객체의 어떤 속성이 set함수로 변경될 때 Repository를 통해 데이터베이스에 값을 기록하세요
# seller의 잔액 정보, buyer의 잔액 정보도 마찬가지 방법으로 모두 변경하세요
# ----------------------------------------------------------------------------------------------------
# 셋째, Service => UI 데이터 변환 과정
# 필요한 데이터만 추출해서 딕셔너리로 변환하고 UI로 전달하세요
