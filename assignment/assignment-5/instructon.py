# 과제 5-1
# Service에서는 도메인 객체를 사용해요
# Service에서 도메인 객체를 사용하기 위해서 Repository는 Databse로부터 얻은 데이터를 도메인 객체로 변환하는 일을 책임지고 있어요
# Service에서 도메인 객체의 데이터가 변경된 경우 역시 Repository를 통해서 Databse에 반영해야 책임이 정확하게 분리될거에요
# Service에서 임의의 Repository를 이용하여 save(도메인 오브젝트) 함수를 실행하면 도메인 오브젝트 내부의 데이터가 Database에 기록되도록 구현하세요
# Hint: 객체.__dict__ 를 사용하면 객체 내부의 인스턴스 변수를 딕셔너리 형태로 얻을 수 있어요

# 과제 5-2
# 현재 Database는 read, write 2개의 함수만 존재하고 있어요
# 하지만 실제로는 csv 파일에 하나의 row를 추가해야 하는 상황도 있고, 어떤 row의 내용을 변경해야 하는 경우도 있어요
# 하지만 현재 file_writer는 모든 rows를 파일에 전부 다시 쓰는 write 모드, 하나의 row를 추가하는 append 모드 이렇게 2가지 모드만 지원되고 있어요
# 즉, 어떤 하나의 row를 변경하려면, 변경된 내용이 포함된 모든 rows를 파일에 전부 다시 쓰는 write 모드를 사용해야 해요
# 위의 내용을 고려해서 Database에 read, add, update 3개의 함수가 존재하도록 코드를 변경하세요

# 과제 5-3(OOP FINAL)
# 로그아웃을 구현하세요
# UI의 메인 스크린 메뉴에 로그아웃을 선택할 수 있으면 되요
# 로그아웃을하면 첫 화면으로 돌아가서 다른 유저로 로그인할 수 있어야 합니다
# 프로그램을 종료하지 않고 서로 다른 유저들로 회원 가입, 로그인, 상품 추가, 상품 구매가 전부 정상 작동하는지 확인하세요
# 모든 인스턴스 변수가 private인지 확인하세요(언더바 2개)
# 자식에게 상속해야 하는 인스턴스 변수는 protected인지 확인하세요 (언더바 1개)
# 함수의 이름이 적절한지 확인하세요
